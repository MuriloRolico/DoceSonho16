CREATE DATABASE IF NOT EXISTS doce_sonho;
USE doce_sonho;

-- Tabela de Usuários
CREATE TABLE IF NOT EXISTS usuario (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nome VARCHAR(100) NOT NULL,
    email VARCHAR(100) UNIQUE NOT NULL,
    senha VARCHAR(200) NOT NULL,
    is_admin BOOLEAN DEFAULT FALSE,
    foto_perfil VARCHAR(100) NULL,
    data_registro DATETIME DEFAULT CURRENT_TIMESTAMP,
    concordou_politica BOOLEAN DEFAULT FALSE,
    cpf_hash VARCHAR(200) NULL,
    endereco_cep VARCHAR(10) NULL,
    endereco_rua VARCHAR(200) NULL,
    endereco_numero VARCHAR(20) NULL,
    endereco_complemento VARCHAR(100) NULL,
    endereco_bairro VARCHAR(100) NULL,
    endereco_cidade VARCHAR(100) NULL,
    endereco_estado VARCHAR(2) NULL,
    reset_token VARCHAR(100) NULL,
    reset_token_expiracao DATETIME NULL,
    ultimo_acesso DATETIME NULL,
    status VARCHAR(20) DEFAULT 'ativo',
    mascarar_email BOOLEAN DEFAULT TRUE,
    mascarar_cpf BOOLEAN DEFAULT TRUE,
    mascarar_endereco BOOLEAN DEFAULT TRUE,
    receber_newsletter BOOLEAN DEFAULT FALSE,
    receber_sms BOOLEAN DEFAULT FALSE,
    receber_whatsapp BOOLEAN DEFAULT TRUE
);

-- Tabela de Tokens
CREATE TABLE IF NOT EXISTS token (
    id INT AUTO_INCREMENT PRIMARY KEY,
    usuario_id INT NOT NULL,
    token VARCHAR(500) NOT NULL,
    tipo VARCHAR(20) DEFAULT 'access',
    device_info VARCHAR(200) NULL,
    data_criacao DATETIME DEFAULT CURRENT_TIMESTAMP,
    data_expiracao DATETIME NOT NULL,
    is_revogado BOOLEAN DEFAULT FALSE,
    FOREIGN KEY (usuario_id) REFERENCES usuario(id)
);

-- Tabela de Produtos
CREATE TABLE IF NOT EXISTS produto (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nome VARCHAR(100) NOT NULL,
    descricao TEXT,
    preco FLOAT NOT NULL,
    categoria VARCHAR(50) NOT NULL,
    imagem VARCHAR(100),
    peso FLOAT,
    ingredientes TEXT,
    data_validade DATETIME,
    informacoes_nutricionais TEXT,
    ativo BOOLEAN DEFAULT TRUE NOT NULL,
    data_criacao DATETIME DEFAULT CURRENT_TIMESTAMP,
    data_atualizacao DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

-- Tabela de Bolos Personalizados
CREATE TABLE IF NOT EXISTS bolo_personalizado (
    id INT AUTO_INCREMENT PRIMARY KEY,
    usuario_id INT NOT NULL,
    nome VARCHAR(100) NOT NULL DEFAULT "Bolo Personalizado",
    massa VARCHAR(50) NOT NULL,
    recheios TEXT NOT NULL,
    cobertura VARCHAR(50) NOT NULL,
    finalizacao TEXT,
    observacoes TEXT,
    preco FLOAT NOT NULL,
    data_criacao DATETIME DEFAULT CURRENT_TIMESTAMP,
    ativo BOOLEAN DEFAULT TRUE,
    FOREIGN KEY (usuario_id) REFERENCES usuario(id)
);

-- Tabela de Pedidos
CREATE TABLE IF NOT EXISTS pedido (
    id INT AUTO_INCREMENT PRIMARY KEY,
    usuario_id INT NOT NULL,
    data DATETIME DEFAULT CURRENT_TIMESTAMP,
    status VARCHAR(20) DEFAULT 'Pendente',
    total FLOAT DEFAULT 0.0,
    tipo_entrega VARCHAR(20) NULL,
    valor_frete FLOAT DEFAULT 0.0,
    endereco_entrega TEXT NULL,
    observacoes TEXT NULL,
    mercado_pago_transaction_id VARCHAR(255),
    FOREIGN KEY (usuario_id) REFERENCES usuario(id)
);

-- Tabela de Itens do Pedido
CREATE TABLE IF NOT EXISTS item_pedido (
    id INT AUTO_INCREMENT PRIMARY KEY,
    pedido_id INT NOT NULL,
    produto_id INT NOT NULL,
    quantidade INT NOT NULL DEFAULT 1,
    preco_unitario FLOAT NOT NULL,
    FOREIGN KEY (pedido_id) REFERENCES pedido(id),
    FOREIGN KEY (produto_id) REFERENCES produto(id)
);

-- Tabela de Itens do Pedido Personalizados
CREATE TABLE IF NOT EXISTS item_pedido_personalizado (
    id INT AUTO_INCREMENT PRIMARY KEY,
    pedido_id INT NOT NULL,
    bolo_personalizado_id INT NOT NULL,
    quantidade INT NOT NULL DEFAULT 1,
    preco_unitario FLOAT NOT NULL,
    FOREIGN KEY (pedido_id) REFERENCES pedido(id),
    FOREIGN KEY (bolo_personalizado_id) REFERENCES bolo_personalizado(id)
);

-- Tabela de Carrinho
CREATE TABLE IF NOT EXISTS carrinho (
    id INT AUTO_INCREMENT PRIMARY KEY,
    usuario_id INT NOT NULL,
    produto_id INT NOT NULL,
    quantidade INT NOT NULL DEFAULT 1,
    data_adicao DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (usuario_id) REFERENCES usuario(id),
    FOREIGN KEY (produto_id) REFERENCES produto(id)
);

-- Tabela de Carrinho Personalizado
CREATE TABLE IF NOT EXISTS carrinho_personalizado (
    id INT AUTO_INCREMENT PRIMARY KEY,
    usuario_id INT NOT NULL,
    bolo_personalizado_id INT NOT NULL,
    quantidade INT NOT NULL DEFAULT 1,
    data_adicao DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (usuario_id) REFERENCES usuario(id),
    FOREIGN KEY (bolo_personalizado_id) REFERENCES bolo_personalizado(id)
);

-- Índices para performance
CREATE INDEX idx_usuario_email ON usuario(email);
CREATE INDEX idx_usuario_status ON usuario(status);
CREATE INDEX idx_token_token ON token(token);
CREATE INDEX idx_token_usuario_id ON token(usuario_id);

-- Inserção de usuário admin
INSERT INTO usuario (nome, email, senha, is_admin, concordou_politica) VALUES
('Admin', 'Rolico@gmail.com', CONCAT('mysql_hash:', SHA2('1234', 256)), TRUE, TRUE);

-- Inserção de produtos
INSERT INTO produto (nome, descricao, preco, categoria, peso, ingredientes, data_validade, informacoes_nutricionais) VALUES
('Bolo de Chocolate', 'Delicioso bolo de chocolate com cobertura de ganache', 45.90, 'Bolos', 1.2,
'Farinha de trigo, açúcar, ovos, chocolate, leite, manteiga',
DATE_ADD(NOW(), INTERVAL 5 DAY),
'Porção de 100g: Calorias: 450, Carboidratos: 55g, Proteínas: 6g, Gorduras: 25g'),

('Bolo de Morango', 'Bolo de baunilha com recheio de morango', 48.90, 'Bolos', 1.0,
'Farinha de trigo, açúcar, ovos, morango, leite, baunilha',
DATE_ADD(NOW(), INTERVAL 4 DAY),
'Porção de 100g: Calorias: 400, Carboidratos: 50g, Proteínas: 5g, Gorduras: 20g'),

('Cupcake de Baunilha', 'Cupcake de baunilha com cobertura de buttercream', 8.50, 'Cupcakes', 0.1,
'Farinha, açúcar, ovos, leite, baunilha, buttercream',
DATE_ADD(NOW(), INTERVAL 3 DAY),
'Porção de 50g: Calorias: 250, Carboidratos: 35g, Proteínas: 3g, Gorduras: 12g'),

('Torta de Limão', 'Torta de limão com merengue', 39.90, 'Tortas', 0.8,
'Farinha, limão, açúcar, ovos, leite, merengue',
DATE_ADD(NOW(), INTERVAL 4 DAY),
'Porção de 100g: Calorias: 380, Carboidratos: 45g, Proteínas: 5g, Gorduras: 20g'),

('Docinhos (50 unidades)', 'Mix de brigadeiros, beijinhos e cajuzinhos', 65.00, 'Doces', 0.5,
'Leite condensado, chocolate, coco, leite em pó',
DATE_ADD(NOW(), INTERVAL 7 DAY),
'Porção de 25g: Calorias: 120, Carboidratos: 18g, Proteínas: 2g, Gorduras: 6g'),

('Bolo Red Velvet', 'Bolo vermelho aveludado com cobertura de cream cheese', 52.90, 'Bolos', 1.1,
'Farinha de trigo, açúcar, ovos, corante vermelho, cacau, cream cheese',
DATE_ADD(NOW(), INTERVAL 3 DAY),
'Porção de 100g: Calorias: 420, Carboidratos: 52g, Proteínas: 5g, Gorduras: 22g'),

('Cheesecake de Frutas Vermelhas', 'Cheesecake cremoso com calda de frutas vermelhas', 55.00, 'Tortas', 1.2,
'Cream cheese, biscoito, manteiga, açúcar, ovos, frutas vermelhas',
DATE_ADD(NOW(), INTERVAL 5 DAY),
'Porção de 100g: Calorias: 350, Carboidratos: 30g, Proteínas: 6g, Gorduras: 24g'),

('Mini Quiches (12 unidades)', 'Sabores variados: queijo, alho-poró e bacon', 35.00, 'Salgados', 0.3,
'Farinha, manteiga, ovos, creme de leite, queijo, bacon, alho-poró',
DATE_ADD(NOW(), INTERVAL 2 DAY),
'Porção de 50g: Calorias: 180, Carboidratos: 12g, Proteínas: 8g, Gorduras: 13g');